---
import type { HTMLAttributes } from "astro/types";
import CopyIcon from "@tabler/icons/outline/clipboard.svg";
import CloseIcon from "@tabler/icons/outline/x.svg";
import IconButton from "~/components/IconButton.astro";
import Snackbar, { hide, show } from "~/components/Snackbar.astro";
export interface CodeBlockProps extends HTMLAttributes<"pre"> {
  "data-language": string;
}

const props = Astro.props as CodeBlockProps;
const showCopy = !["http", "https", "plaintext"].includes(
  props["data-language"],
);
---

<section class="relative">
  {
    showCopy && (
      <IconButton class="absolute right-1 top-1" data-copy>
        <CopyIcon class="text-white" />
      </IconButton>
    )
  }
  <pre {...props}><slot /></pre>
</section>
<Snackbar>
  <span>Copied!</span>
  <IconButton data-close>
    <CloseIcon class="h-6 w-6" />
  </IconButton>
</Snackbar>

<script>
  import { hide, show } from "~/components/Snackbar.astro";
  const copyButtons = document.querySelectorAll("[data-copy]");
  const closeButtons = document.querySelectorAll("[data-close]");
  const snackbar = document.querySelector("[data-snackbar]"); // only show first snackbar

  copyButtons.forEach((copyBtn) => {
    copyBtn.addEventListener("click", function (this: HTMLButtonElement) {
      const code = this.parentElement?.querySelector("pre");
      if (code) {
        // copy text
        navigator.clipboard.writeText(code.innerText);
        // show snackbar for 10 seconds
        show(snackbar);
        hide(snackbar);
      }
    });
  });

  closeButtons.forEach((closeBtn) => {
    closeBtn.addEventListener("click", () => hide(snackbar));
  });
</script>
