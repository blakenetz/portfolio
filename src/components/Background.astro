---
import type { HTMLAttributes } from "astro/types";
import Header from "~/components/Header.astro";

interface Props extends HTMLAttributes<"main"> {
  showCheckerboard?: boolean;
  showNav?: boolean;
  rootProps?: HTMLAttributes<"main">;
  withPadding?: boolean;
}

const {
  showCheckerboard,
  showNav,
  class: className,
  rootProps = {},
  withPadding = true,
  ...props
} = Astro.props;
---

<section id="background" class="fixed inset-0 -z-10" transition:persist>
</section>
{showCheckerboard && <section id="checkerboard" class="fixed inset-0 -z-10" />}
<div
  id="noise"
  class="bg-size-200 pointer-events-none fixed -inset-[150%] h-[400%] w-[400%] bg-repeat opacity-15"
  transition:persist
>
</div>
<main
  {...rootProps}
  class:list={[
    "flex h-dvh w-dvw cursor-default overflow-hidden",
    { "lg:p-checkerboard-size": showCheckerboard },
    rootProps.class,
  ]}
>
  {showNav && <Header />}
  <section
    {...props}
    class:list={[
      "flex h-full w-full flex-col overflow-y-auto",
      { "pt-16": showNav && !showCheckerboard },
      { "pt-16 lg:pt-0": showNav && showCheckerboard },
      { "p-4 lg:p-8": withPadding },
      className,
    ]}
  >
    <slot />
  </section>
</main>
<section
  id="cursor"
  class="pointer-events-none fixed inset-0"
  transition:persist
>
</section>

<style>
  #noise {
    animation: noise-anim 4s steps(8) infinite;
    background: url(/noise.png);
  }

  @keyframes noise-anim {
    0% {
      transform: translate(0, 0);
    }
    25% {
      transform: translate(-10%, 5%);
    }
    50% {
      transform: translate(5%, -10%);
    }
    75% {
      transform: translate(-5%, 10%);
    }
    100% {
      transform: translate(0, 0);
    }
  }
</style>

<script>
  import {
    BlobBackgroundCanvas,
    CheckerboardBackgroundCanvas,
    CursorCanvas,
  } from "~/lib/canvas.client";
  import { isTouchDevice } from "~/lib/utils.client";

  document.addEventListener("astro:page-load", () => {
    if (document.getElementById("checkerboard")) {
      new CheckerboardBackgroundCanvas("checkerboard");
    }

    new BlobBackgroundCanvas("background");
    if (!isTouchDevice()) new CursorCanvas("cursor");
  });
</script>
