---
import type { HTMLAttributes } from "astro/types";
import CopyIcon from "@tabler/icons/outline/clipboard.svg";
import CloseIcon from "@tabler/icons/outline/x.svg";
import IconButton from "~/components/IconButton.astro";

export interface CodeBlockProps extends HTMLAttributes<"pre"> {
  "data-language": string;
}

const props = Astro.props as CodeBlockProps;
const showCopy = !["http", "https", "plaintext"].includes(
  props["data-language"],
);
---

<style>
  [data-snackbar] {
    visibility: visible;
    animation: snackbar-slide 0.3s ease-out forwards;
    transform-origin: bottom;
  }

  [data-snackbar].hidden {
    visibility: hidden;
    animation: snackbar-slide 0.3s ease-in reverse forwards;
  }

  @keyframes snackbar-slide {
    from {
      transform: translateY(100%);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
</style>

<section class="relative">
  {
    showCopy && (
      <IconButton class="absolute right-1 top-1" data-copy>
        <CopyIcon class="text-white" />
      </IconButton>
    )
  }
  <pre {...props}><slot /></pre>
</section>
<div
  data-snackbar
  class="bg-aquamarine-700 fixed bottom-4 left-4 z-10 hidden rounded-full px-8 py-2 pr-6 text-sm font-bold"
>
  <span class="flex items-center gap-2">
    <span>Copied!</span>
    <IconButton data-close>
      <CloseIcon class="h-6 w-6" />
    </IconButton>
  </span>
</div>

<script>
  const copyButtons = document.querySelectorAll("[data-copy]");
  const closeButtons = document.querySelectorAll("[data-close]");
  const snackbar = document.querySelector("[data-snackbar]"); // only show first snackbar

  copyButtons.forEach((copyBtn) => {
    copyBtn.addEventListener("click", function (this: HTMLButtonElement) {
      const code = this.parentElement?.querySelector("pre");
      if (code) {
        // copy text
        navigator.clipboard.writeText(code.innerText);
        // show snackbar for 10 seconds
        snackbar?.classList.remove("hidden");
        setTimeout(() => snackbar?.classList.add("hidden"), 10000);
      }
    });
  });

  closeButtons.forEach((closeBtn) => {
    closeBtn.addEventListener("click", () => {
      snackbar?.classList.add("hidden");
    });
  });
</script>
