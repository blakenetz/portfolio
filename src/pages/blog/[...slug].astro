---
import LinkedInIcon from "@tabler/icons/outline/brand-linkedin.svg";
import RedditIcon from "@tabler/icons/outline/brand-reddit.svg";
import ClipboardIcon from "@tabler/icons/outline/clipboard.svg";
import MailIcon from "@tabler/icons/outline/mail.svg";
import CloseIcon from "@tabler/icons/outline/x.svg";
import { type CollectionEntry, getCollection, render } from "astro:content";
import CodeBlock from "~/components/blog/CodeBlock.astro";
import SourceLink from "~/components/blog/SourceLink.astro";
import Button from "~/components/Button.astro";
import IconButton from "~/components/IconButton.astro";
import Link from "~/components/Link.astro";
import Snackbar from "~/components/Snackbar.astro";
import { ANIMATE_COLORS_CLASSES } from "~/consts";
import Layout from "~/layouts/Root.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"blog">;

const post = Astro.props;

const { Content } = await render(post);

const linkedinHref =
  "http://www.linkedin.com/shareArticle?" +
  new URLSearchParams({
    mini: "true",
    url: Astro.url.toString(),
  }).toString();

const redditHref =
  "https://www.reddit.com/submit?" +
  new URLSearchParams({
    url: Astro.url.toString(),
    title: post.data.title,
    type: "LINK",
  }).toString();

const emailHref =
  "mailto:yourfriend@gmail.com?" +
  new URLSearchParams({
    subject: "Check out this amazing article I read",
    body: 'Make sure to update the "To" field before sending!',
  })
    .toString()
    .replace(/\+/g, "%20");
---

<Layout
  headProps={{
    title: `BN | Blog | ${post.data.title}`,
    description: post.data.description,
  }}
  layoutProps={{ showNav: true }}
>
  <section class="mx-auto flex max-w-4xl flex-col items-center gap-8 py-16">
    <div class="flex flex-col items-center gap-2">
      <h1 class={`${ANIMATE_COLORS_CLASSES} text-4xl font-bold inline-block`}>
        {post.data.title}
      </h1>
      {post.data.link && <SourceLink link={post.data.link} />}
    </div>

    <div
      class="prose prose-h1:font-bold prose-h1:text-xl prose-a:text-primary prose-a:no-underline prose-p:text-justify prose-img:rounded-xl prose-headings:underline max-w-full px-2"
    >
      <Content components={{ a: Link, pre: CodeBlock }} />
    </div>
    <div>
      Share on...
      <div class="flex gap-2">
        <Button
          as="a"
          href={linkedinHref}
          target="_blank"
          rel="noopener noreferrer"
        >
          <LinkedInIcon />
          LinkedIn
        </Button>
        <Button
          as="a"
          href={redditHref}
          target="_blank"
          rel="noopener noreferrer"
        >
          <RedditIcon />
          Reddit
        </Button>
        <Button
          as="a"
          href={emailHref}
          target="_blank"
          rel="noopener noreferrer"
        >
          <MailIcon />
          Email
        </Button>
        <Button data-share>
          <ClipboardIcon />
          Copy
        </Button>
        <Snackbar />
      </div>
    </div>
  </section>
</Layout>

<script>
  import { getSnackbarElement } from "~/components/Snackbar.astro";

  const shareButton = document.querySelector("[data-share]");
  const snackbar = getSnackbarElement();

  shareButton?.addEventListener("click", () => {
    navigator.clipboard.writeText(window.location.href);
    snackbar.show();
  });
</script>
