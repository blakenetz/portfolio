---
import { formatDate } from "~/lib/utils";
import { getCollection } from "astro:content";
import Card from "~/components/Card.astro";
import UpArrowIcon from "@tabler/icons/outline/arrow-up.svg";
import DownArrowIcon from "@tabler/icons/outline/arrow-down.svg";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);
---

<section class="flex flex-col gap-2">
  <div class="flex items-center justify-end">
    <span class="font-barrio mr-2 text-sm">Sort</span>
    <button
      type="button"
      class="hover:text-primary group/iconBtn relative rounded-sm p-1"
      data-sort="asc"
    >
      <div
        class:list={[
          "invisible group-hover/iconBtn:visible",
          "from-sunglow via-sunglow to-rose absolute -inset-1 rounded-2xl bg-gradient-to-tr opacity-70 blur-lg filter",
        ]}
      >
      </div>
      <UpArrowIcon />
    </button>
    <button
      type="button"
      class="hover:text-primary group/iconBtn relative rounded-sm p-1"
      data-sort="desc"
    >
      <div
        class:list={[
          "invisible group-hover/iconBtn:visible",
          "from-sunglow via-sunglow to-rose absolute -inset-1 rounded-2xl bg-gradient-to-tr opacity-70 blur-lg filter",
        ]}
      >
      </div>
      <DownArrowIcon />
    </button>
  </div>

  <div id="posts" class="flex flex-col gap-2">
    {
      posts.map((post) => (
        <Card
          class="flex flex-col gap-2 bg-white p-4"
          as="a"
          href={`/blog/${post.id}`}
          data-date={post.data.pubDate.valueOf()}
        >
          <h2 class="font-barrio text-2xl font-bold">{post.data.title}</h2>
          <p>{post.data.description}</p>
          <p class="text-sm">Published {formatDate(post.data.pubDate)}</p>
        </Card>
      ))
    }
  </div>
</section>

<script>
  const sortButtons =
    document.querySelectorAll<HTMLButtonElement>("[data-sort]");
  const postEls = document.querySelectorAll<HTMLAnchorElement>("[data-date]");
  const container = document.getElementById("posts");

  sortButtons.forEach((button) => {
    button.addEventListener("click", async function (this: HTMLButtonElement) {
      if (this.dataset.sort && container) {
        container.innerHTML = "";
        Array.from(postEls)
          .toSorted((a, b) => {
            const dateA = parseInt(a.dataset.date ?? "0");
            const dateB = parseInt(b.dataset.date ?? "0");
            return this.dataset.sort === "asc" ? dateA - dateB : dateB - dateA;
          })
          .forEach((node) => container.appendChild(node));
      }
    });
  });
</script>
