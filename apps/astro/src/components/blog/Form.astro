---
import { formatDate } from "~/lib/utils";
import { getCollection } from "astro:content";
import Card from "~/components/Card.astro";
import UpArrowIcon from "@tabler/icons/outline/arrow-up.svg";
import DownArrowIcon from "@tabler/icons/outline/arrow-down.svg";

let posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const direction = data.get("sort");
    console.log(data, direction);
    posts = (await getCollection("blog")).sort((a, b) =>
      direction === "asc"
        ? a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
        : b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
    );
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<form method="POST" class="flex flex-col gap-2">
  <div class="flex items-center justify-end">
    <span class="font-barrio mr-2 text-sm">Sort</span>
    <button
      class="hover:text-primary group/iconBtn relative rounded-sm p-1"
      data-sort="asc"
    >
      <div
        class:list={[
          "invisible group-hover/iconBtn:visible",
          "from-sunglow via-sunglow to-rose absolute -inset-1 rounded-2xl bg-gradient-to-tr opacity-70 blur-lg filter",
        ]}
      >
      </div>
      <UpArrowIcon />
    </button>
    <button
      class="hover:text-primary group/iconBtn relative rounded-sm p-1"
      data-sort="desc"
    >
      <div
        class:list={[
          "invisible group-hover/iconBtn:visible",
          "from-sunglow via-sunglow to-rose absolute -inset-1 rounded-2xl bg-gradient-to-tr opacity-70 blur-lg filter",
        ]}
      >
      </div>
      <DownArrowIcon />
    </button>
  </div>

  <input type="hidden" name="sort" value="desc" />
  {
    posts.map((post) => (
      <Card
        class="flex flex-col gap-2 bg-white p-4"
        as="a"
        href={`/blog/${post.id}`}
      >
        <h2 class="font-barrio text-2xl font-bold">{post.data.title}</h2>
        <p>{post.data.description}</p>
        <p class="text-sm">Published {formatDate(post.data.pubDate)}</p>
      </Card>
    ))
  }
</form>

<script>
  const sortButtons = document.querySelectorAll("[data-sort]");
  const input = document.querySelector<HTMLInputElement>(`input[name="sort"]`);

  sortButtons.forEach((button) => {
    button.addEventListener("click", function (this: HTMLButtonElement) {
      const form = this.closest("form");
      const value = this.dataset.sort;
      if (input && form) {
        input.value = value ?? "desc";
        form.submit();
      }
    });
  });
</script>
